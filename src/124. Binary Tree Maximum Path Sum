/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int maxSum;

    public int maxPathSum(TreeNode root) {
        maxSum = Integer.MIN_VALUE;
        findMaxPath(root);
        return maxSum;
    }

    private int findMaxPath(TreeNode root){
        if(root == null){
            return 0;
        }

        int leftSubtreeMax = Math.max(findMaxPath(root.left), 0);
        int rightSubtreeMax = Math.max(findMaxPath(root.right), 0);

        maxSum = Math.max(maxSum, leftSubtreeMax + rightSubtreeMax + root.val);

        return Math.max(leftSubtreeMax + root.val, rightSubtreeMax + root.val);
    }
}
